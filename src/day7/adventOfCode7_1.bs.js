// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var $$Array                 = require("bs-platform/lib/js/array.js");
var Caml_array              = require("bs-platform/lib/js/caml_array.js");
var Js_primitive            = require("bs-platform/lib/js/js_primitive.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function words(string) {
  var match = string.match((/[a-zA-z]+/gi));
  if (match !== null) {
    return $$Array.to_list(match);
  } else {
    return $$Array.to_list(/* array */[]);
  }
}

function number(string) {
  var param = (/(\d+)/).exec(string);
  if (param !== null) {
    return Js_primitive.null_undefined_to_opt(Caml_array.caml_array_get(param, 1));
  } else {
    return /* None */0;
  }
}

var testInput = "pbga (66)\nxhth (57)\nebii (61)\nhavc (66)\nktlj (57)\nfwft (72) -> ktlj, cntj, xhth\nqoyq (66)\npadx (45) -> pbga, havc, qoyq\ntknk (41) -> ugml, padx, fwft\njptl (61)\nugml (68) -> gyxo, ebii, jptl\ngyxo (61)\ncntj (57)".split("\n");

console.log($$Array.map((function (a) {
            var match = words(a);
            if (match) {
              var index = number(a);
              return /* tuple */[
                      match[0],
                      index,
                      match[1]
                    ];
            } else {
              throw [
                    Caml_builtin_exceptions.match_failure,
                    [
                      "/Users/Nykanen/Projects/oss/advent-of-code/src/day7/adventOfCode7_1.re",
                      24,
                      13
                    ]
                  ];
            }
          }), testInput));

exports.words     = words;
exports.number    = number;
exports.testInput = testInput;
/* testInput Not a pure module */
